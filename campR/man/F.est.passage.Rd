% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/est_passage.r
\name{F.est.passage}
\alias{F.est.passage}
\title{F.est.passage - Estimate passage}
\usage{
F.est.passage(catch.df, release.df, summarize.by, file.root, ci)
}
\arguments{
\item{catch.df}{A data frame with one row per \code{trapvisitID} for a
particular \code{FinalRun} and \code{lifeStage}.  That is, \code{catch.df}
has only one (of what could be many) run-by-life-stage combinations.}

\item{release.df}{A data frame resulting from a call to function
\code{F.get.release.data}.  Contains efficiency data.}

\item{summarize.by}{A text string indicating the temporal unit over which
daily estimated catch is to be summarized.  Can be one of \code{day}, 
\code{week}, \code{month}, \code{year}.}

\item{file.root}{A text string indicating a prefix to append to all output.}

\item{ci}{A logical indicating if 95% bootstrapped confidence intervals
should be estimated along with passage estimates.}
}
\value{
A data frame containing daily passage estimates and associated
  standard errors.
}
\description{
Compute passage estimates, given catch and efficiency trial data.
}
\details{
Estimation of passage is comprised of two main steps.  The first 
  fetches and formats all the necessary data.  The second performs 
  statistical analysis on those processed data.  Function 
  \code{F.est.passage} is the workhorse function for all statistical 
  analysis.  As such, it calls functions responsible for catch modeling
  (\code{F.est.catch}), efficiency modeling (\code{F.est.efficiency}), and
  bootstrapping (\code{F.bootstrap.passage}).
  
  Function calls resulting in non-zero catch, but zero efficiency, due to no
  valid efficiency trials, result in warnings of zero efficiency.  The 
  function will continue, but all passage estimates will be \code{NA}.
  
  Function \code{F.est.passage} brings together catch and efficiency data. 
  Called the 'grand merge,' resulting data frame \code{grand.df} forms the 
  basis of all passage estimation.  Merging takes places on unique
  combinations of \code{trapPositionID} and \code{batchDate}.  Trap matches
  respect decimal suffixes appended due to gaps in fishing.
  
  In processing prior to the creation of the \code{grand.df}, the dates 
  outside the first and last date are dropped from each trap. In reality 
  however, the season for each trap is identified as non missing catch.  In 
  other words, the grand merge inserts every date for all traps because the 
  underlying efficiency data frame has all dates.
  
  Function \code{F.bootstrap.passage} summarizes the daily passage estimates 
  housed in \code{grand.df} to the temporal units specified via 
  \code{summarize.by}, and then compiles all statistics for eventual
  reporting.  Statistics include weighted mean forklength, standard deviation
  of forklength, and fish n.
}
\section{Fish Accounting}{
  
Passage estimation results in the partitioning of 
  fish into different groups. For example, a fish could be assigned/not 
  assigned, measured/not measured, half-cone/full-cone, plus-count, imputed, 
  or inflated (define these?). Function \code{F.est.passage} organizes all of
  these different types of fish following their initial partitioning in
  function \code{F.get.catch.data}. Fish accounting on a daily basis ensures 
  that the counts of these different types of fish collapse back to their 
  original totals following analytic processing.  Said another way, fish 
  accounting ensures that no fish are mysteriously gained or lost during the 
  passage estimation process.
  
  Three types of daily checks are performed for each individual trap.
  
  Do we need to define these? 
  
  \enumerate{
    \item{eqn{totalCatch =  assignedCatch + unassignedCatch + imputedCatch}}
    \item{eqn{inflatedCatch =  assignedCatch + unassignedCatch}}
    \item{eqn{totalCatch =  inflatedCatch + imputedCatch}}
  }
}
\examples{
# query mdb?
}
\seealso{
\code{F.get.release.data}, \code{F.get.catch.data}, \code{F.est.passage}
}

