WYCensus@data$unique_ID <- paste0(WYCensus@data$Grid_ID,'-',WYCensus@data$Town_ID)
# now, bring in results from fitting models.
# we must have run the runCodeB-WYCensus.r special program to have these Dataframes!!!!
# have to be careful about shapefiles!!!!
# double-sample models on the 20%.
test0 <- merge(WYCensus@data,cent20CSum,by=c('unique_ID'),all.x=TRUE)
# we have floaters that result in NA.  put in the mean S and N for these towns.
# get the pAvg used from the convergeNSBTPD_bs2 program.  get different pAvg for each of clip and cent.
pAvgCent <- 0.9876653
pAvgClip <- 0.9842338
test0$totN20 <- ifelse( (test0$totN20 == -99 & substr(test0$unique_ID,1,3) != 'out'),1/pAvgCent,test0$totN20)
test0$totS20 <- ifelse( (test0$totS20 == -99 & substr(test0$unique_ID,1,3) != 'out'),test1$AreaAc/pAvgCent,test0$totS20)
# single-sample models on the 80%.
test2 <- merge(test0,cent80B,by=c('unique_ID'),all.x=TRUE)
test2$FinalS <- ifelse(is.na(test2$the20in80),test2$totS20,test2$S)
test2$FinalN <- ifelse(is.na(test2$the20in80),test2$totN20,test2$N)
test2[test2$unique_ID == 'out-292',]$FinalS <- test2[test2$unique_ID == 'out-292',]$AreaAc/pAvgCent
test2[test2$unique_ID == 'out-292',]$FinalN <- 1/pAvgCent
test2$townTypeAll <- ifelse(test2$AreaAc <= 1000,'Small','Large')
write.csv(test2,'C:/Users/jmitchell/Desktop/test3.csv')
test2 <- test2[order(test2$R_ID),]
rownames(test2) <- NULL
test2$totN20 <- test2$totS20 <- test2$S <- test2$N <- NULL
WYCensus@data <- test2
# digitized - large.
s1 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Large' & WYCensus$Grid_ID != 'out' & is.na(WYCensus$the20in80),]$AreaAc)        #  20% S
s2 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Large' & WYCensus$the20in80 %in% c(0,1) & !is.na(WYCensus$the20in80),]$AreaAc)  #  80% S
s3 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Large',]$AreaAc)                                                                # 100% S
n1 <- nrow(WYCensus@data[WYCensus$townTypeAll == 'Large' & WYCensus$Grid_ID != 'out' & is.na(WYCensus$the20in80),])              #  20% N
n2 <- nrow(WYCensus@data[WYCensus$townTypeAll == 'Large' & WYCensus$the20in80 %in% c(0,1) & !is.na(WYCensus$the20in80),])        #  80% N
n3 <- nrow(WYCensus@data[WYCensus$townTypeAll == 'Large',])                                                                      # 100% N
row1Large <- cbind(n1,s1,n2,s2,n3,s3)
# digitized - small.
s1 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Small' & WYCensus$Grid_ID != 'out' & is.na(WYCensus$the20in80),]$AreaAc)        #  20% S
s2 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Small' & WYCensus$the20in80 %in% c(0,1) & !is.na(WYCensus$the20in80),]$AreaAc)  #  80% S
s3 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Small',]$AreaAc)                                                                # 100% S
n1 <- nrow(WYCensus@data[WYCensus$townTypeAll == 'Small' & WYCensus$Grid_ID != 'out' & is.na(WYCensus$the20in80),])              #  20% N
n2 <- nrow(WYCensus@data[WYCensus$townTypeAll == 'Small' & WYCensus$the20in80 %in% c(0,1) & !is.na(WYCensus$the20in80),])        #  80% N
n3 <- nrow(WYCensus@data[WYCensus$townTypeAll == 'Small',])                                                                      # 100% N
row1Small <- cbind(n1,s1,n2,s2,n3,s3)
# digitized - total.
s1 <- sum(WYCensus@data[WYCensus$Grid_ID != 'out' & is.na(WYCensus$the20in80),]$AreaAc)        #  20% S
s2 <- sum(WYCensus@data[WYCensus$the20in80 %in% c(0,1) & !is.na(WYCensus$the20in80),]$AreaAc)  #  80% S
s3 <- sum(WYCensus@data$AreaAc)                                                                # 100% S
n1 <- nrow(WYCensus@data[WYCensus$Grid_ID != 'out' & is.na(WYCensus$the20in80),])              #  20% N
n2 <- nrow(WYCensus@data[WYCensus$the20in80 %in% c(0,1) & !is.na(WYCensus$the20in80),])        #  80% N
n3 <- nrow(WYCensus@data)                                                                      # 100% N
row1Total <- cbind(n1,s1,n2,s2,n3,s3)
# corrected for false negatives - large.
s1 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Large' & WYCensus$Grid_ID != 'out' & is.na(WYCensus$the20in80),]$FinalS)        #  20% S
s2 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Large' & WYCensus$the20in80 %in% c(0,1) & !is.na(WYCensus$the20in80),]$FinalS)  #  80% S
s3 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Large',]$FinalS)                                                                # 100% S
n1 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Large' & WYCensus$Grid_ID != 'out' & is.na(WYCensus$the20in80),]$FinalN)        #  20% N
n2 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Large' & WYCensus$the20in80 %in% c(0,1) & !is.na(WYCensus$the20in80),]$FinalN)  #  80% N
n3 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Large',]$FinalN)                                                                # 100% N
row2Large <- cbind(n1,s1,n2,s2,n3,s3)
# corrected for false negatives - small.
s1 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Small' & WYCensus$Grid_ID != 'out' & is.na(WYCensus$the20in80),]$FinalS)        #  20% S
s2 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Small' & WYCensus$the20in80 %in% c(0,1) & !is.na(WYCensus$the20in80),]$FinalS)  #  80% S
s3 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Small',]$FinalS)                                                                # 100% S
n1 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Small' & WYCensus$Grid_ID != 'out' & is.na(WYCensus$the20in80),]$FinalN)        #  20% N
n2 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Small' & WYCensus$the20in80 %in% c(0,1) & !is.na(WYCensus$the20in80),]$FinalN)  #  80% N
n3 <- sum(WYCensus@data[WYCensus$townTypeAll == 'Small',]$FinalN)                                                                # 100% N
row2Small <- cbind(n1,s1,n2,s2,n3,s3)
# corrected for false negatives - total.
s1 <- sum(WYCensus@data[WYCensus$Grid_ID != 'out' & is.na(WYCensus$the20in80),]$FinalS)        #  20% S
s2 <- sum(WYCensus@data[WYCensus$the20in80 %in% c(0,1) & !is.na(WYCensus$the20in80),]$FinalS)  #  80% S
s3 <- sum(WYCensus@data$FinalS)                                                                # 100% S
n1 <- sum(WYCensus@data[WYCensus$Grid_ID != 'out' & is.na(WYCensus$the20in80),]$FinalN)        #  20% N
n2 <- sum(WYCensus@data[WYCensus$the20in80 %in% c(0,1) & !is.na(WYCensus$the20in80),]$FinalN)  #  80% N
n3 <- sum(WYCensus@data$FinalN)                                                                # 100% N
row2Total <- cbind(n1,s1,n2,s2,n3,s3)
WYCensusC <- WYCensus[WYCensus@data$Bad == 0,]
# corrected for truthed towns - large.
s1 <- sum(WYCensusC@data[WYCensusC$townTypeAll == 'Large' & WYCensusC$Grid_ID != 'out' & is.na(WYCensusC$the20in80),]$FinalS)        #  20% S
s2 <- sum(WYCensusC@data[WYCensusC$townTypeAll == 'Large' & WYCensusC$the20in80 %in% c(0,1) & !is.na(WYCensusC$the20in80),]$FinalS)  #  80% S
s3 <- sum(WYCensusC@data[WYCensusC$townTypeAll == 'Large',]$FinalS)                                                                  # 100% S
n1 <- sum(WYCensusC@data[WYCensusC$townTypeAll == 'Large' & WYCensusC$Grid_ID != 'out' & is.na(WYCensusC$the20in80),]$FinalN)        #  20% N
n2 <- sum(WYCensusC@data[WYCensusC$townTypeAll == 'Large' & WYCensusC$the20in80 %in% c(0,1) & !is.na(WYCensusC$the20in80),]$FinalN)  #  80% N
n3 <- sum(WYCensusC@data[WYCensusC$townTypeAll == 'Large',]$FinalN)                                                                  # 100% N
row3Large <- cbind(n1,s1,n2,s2,n3,s3)
# corrected for truthed towns - small.
s1 <- sum(WYCensusC@data[WYCensusC$townTypeAll == 'Small' & WYCensusC$Grid_ID != 'out' & is.na(WYCensusC$the20in80),]$FinalS)        #  20% S
s2 <- sum(WYCensusC@data[WYCensusC$townTypeAll == 'Small' & WYCensusC$the20in80 %in% c(0,1) & !is.na(WYCensusC$the20in80),]$FinalS)  #  80% S
s3 <- sum(WYCensusC@data[WYCensusC$townTypeAll == 'Small',]$FinalS)                                                                  # 100% S
n1 <- sum(WYCensusC@data[WYCensusC$townTypeAll == 'Small' & WYCensusC$Grid_ID != 'out' & is.na(WYCensusC$the20in80),]$FinalN)        #  20% N
n2 <- sum(WYCensusC@data[WYCensusC$townTypeAll == 'Small' & WYCensusC$the20in80 %in% c(0,1) & !is.na(WYCensusC$the20in80),]$FinalN)  #  80% N
n3 <- sum(WYCensusC@data[WYCensusC$townTypeAll == 'Small',]$FinalN)                                                                  # 100% N
row3Small <- cbind(n1,s1,n2,s2,n3,s3)
# corrected for truthed towns - total.
s1 <- sum(WYCensusC@data[WYCensusC$Grid_ID != 'out' & is.na(WYCensusC$the20in80),]$FinalS)        #  20% S
s2 <- sum(WYCensusC@data[WYCensusC$the20in80 %in% c(0,1) & !is.na(WYCensusC$the20in80),]$FinalS)  #  80% S
s3 <- sum(WYCensusC@data$FinalS)                                                                  # 100% S
n1 <- sum(WYCensusC@data[WYCensusC$Grid_ID != 'out' & is.na(WYCensusC$the20in80),]$FinalN)        #  20% N
n2 <- sum(WYCensusC@data[WYCensusC$the20in80 %in% c(0,1) & !is.na(WYCensusC$the20in80),]$FinalN)  #  80% N
n3 <- sum(WYCensusC@data$FinalN)                                                                  # 100% N
row3Total <- cbind(n1,s1,n2,s2,n3,s3)
# corrected for false positives -- active.
f  <- 320/377    # the proportion to use for small towns
fA <- 311/377    # the active proportion of small towns
fI <-   9/377    # the inactive proportion of small towns
g  <-   16/23    # the proportion to use for large towns
gA <-   16/23    # the active proportion of large towns
gI <-       0    # the inactive proportion of large towns
justDoIt <- function(x,size){
s1 <- x*sum(WYCensusC@data[WYCensusC$townTypeAll == size & WYCensusC$Grid_ID != 'out' & is.na(WYCensusC$the20in80),]$FinalS)        #  20% S
s2 <- x*sum(WYCensusC@data[WYCensusC$townTypeAll == size & WYCensusC$the20in80 %in% c(0,1) & !is.na(WYCensusC$the20in80),]$FinalS)  #  80% S
s3 <- x*sum(WYCensusC@data[WYCensusC$townTypeAll == size,]$FinalS)                                                                  # 100% S
n1 <- x*sum(WYCensusC@data[WYCensusC$townTypeAll == size & WYCensusC$Grid_ID != 'out' & is.na(WYCensusC$the20in80),]$FinalN)        #  20% N
n2 <- x*sum(WYCensusC@data[WYCensusC$townTypeAll == size & WYCensusC$the20in80 %in% c(0,1) & !is.na(WYCensusC$the20in80),]$FinalN)  #  80% N
n3 <- x*sum(WYCensusC@data[WYCensusC$townTypeAll == size,]$FinalN)                                                                  # 100% N
out <- cbind(n1,s1,n2,s2,n3,s3)
}
row4Total <- justDoIt(fA,'Small')
row5Total <- justDoIt(gA,'Large')
row6Total <- row4Total + row5Total
row7Total <- justDoIt(fI,'Small')
row8Total <- justDoIt(gI,'Large')
row9Total <- row7Total + row8Total
theTotal <- rbind(row1Small,row1Large,row1Total,row2Small,row2Large,row2Total,row3Small,row3Large,row3Total,row4Total,row5Total,row6Total,row7Total,row8Total,row9Total)
load('//lar-file-srv/Data/BTPD/Product/WYCensus','centsForCensus')
load('//lar-file-srv/Data/BTPD/Product/WYCensus/centsForCensus.RData')
test0 <- merge(WYCensus@data,cent20CSum,by=c('unique_ID'),all.x=TRUE)
WYCensusC <- readOGR('//lar-file-srv/Data/BTPD/Product/Clean ShapeFiles/WY','WY--CensusFinal')
sum(WYCensusC@data$AreaAc)
sum(WYCensus@data$AreaAc)
theCols <- brewer.pal(5,"RdYlBu")
cnt2 <- spTransform(readOGR('//lar-file-SRV/Data/BTPD/dataBase/shapeFiles/Counties - US','cb_2014_us_county_20m'),CRS(projAEA))
# get counties in which our towns fall.
rownames(cnt@data) <- sapply(cnt@polygons, function(x) x@ID)
test <- gIntersects(allUS,cnt,byid=TRUE)
preIntCnt <- cnt[rownames(cnt@data) %in% names(rowSums(test)[rowSums(test) > 0]),]
intCnt <- preIntCnt[preIntCnt@data$State == 'WY',]
i <- 1
state <- intCnt@data$State[i]
cnty <- as.character(droplevels(intCnt@data$NAME[i]))
j <- as.numeric(rownames(samps[samps$State == state,]))
jpeg(paste0("//lar-file-SRV/Data/BTPD/Product/",state,"/County Plots/SamplingFramePlot - Census - ",state," - ",cnty," County - Document.jpg"),width=10.5,height=8,units="in",res=400)
a <- layout(matrix(c(rep(1,9),2,rep(3,7),4,rep(5,9),6,rep(7,5),8,9,10,6,rep(7,5),8,9,10,6,rep(7,5),11,12,13,6,rep(7,5),14,15,16,6,rep(7,5),14,15,16,6,rep(7,5),17,18,19,6,rep(7,5),20,21,22,6,rep(7,5),20,21,22,rep(23,9)),12,9,byrow=TRUE),widths=c(0.01,rep(0.1616667,5),0.01,0.1616667,0.01),heights=c(0.01,0.13571,0.01,0.13571,0.13571,0.01,0.13571,0.13571,0.01,0.13571,0.13571,0.01))   # define layout for output
layout.show(a)
# ----- row (1) ---- empty row ---------------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (2,1) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- row (2) ------ big title on top ------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
text(1,u[1] + 2.00*(u[2]-u[1])/3,paste0('Census BTPD Sampling Frame for '),cex=2.25)
text(1,u[1] + 1.00*(u[2]-u[1])/3,paste0(cnty," County, ",state),cex=2.25)
box()
# ----- cell (2,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- row (3) ------ empty row -------------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- col (1) --- empty column -------------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (4,2) --- big plot --------------
stateAEA <- cnt[cnt@data$State == state & cnt@data$NAME == cnty,]
# aea projected
plot(stateAEA,col='white',border='white')   # put the county down first to establish bbox
plot(cnt[cnt@data$State == state,],col='lightgray',border='lightgray',add=TRUE)
plot(Bas[[j]],add=TRUE,col=theCols[5],border=NA)
D <- c(col2rgb(theCols[4]),0.75*255)
plot(stateAEA,col=rgb(D[1],D[2],D[3],D[4],max=255),border='lightgray',add=TRUE)   # put the county down first to establish bbox
plot(cntLines[[j]],col='lightgray',add=TRUE,lwd=2)   # this is really a county in this setup.
#plot(as(stateAEA,"SpatialLinesDataFrame"),col=theCols[5],add=TRUE)   # this is really a county in this setup.
#plot(cntLines[[j]],add=TRUE,col='lightgray',border='white',lwd=1)
#plot(cntState[[j]],add=TRUE,col='white',lwd=3.5)
C <- c(col2rgb(theCols[3])[,1],0.5*255)
plot(bas[[j]],add=TRUE,col=rgb(C[1],C[2],C[3],C[4],max=255),border="gray")
plot(WYCensus,add=TRUE,col=theCols[2],border=theCols[1])
if(cnty == "Pima"){     # specially add the az towns drawn by az. no other county is named pima.
plot(azTownsp,add=TRUE,col=theCols[2],border=theCols[1])
}
text(coordinates(gCentroid(stateAEA)),paste0(cnty," County"),cex=1.5)#,col="white")
box(which="plot")
# ----- cell (4,4) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
#plot(stateAEA,col='white',border='white')   # put the county down first to establish bbox
plot(cnt[cnt@data$State == state,],col='lightgray',border='lightgray')#,add=TRUE)
plot(Bas[[j]],add=TRUE,col=theCols[5],border=NA)
plot(stateAEA,col=theCols[4],border='lightgray',add=TRUE)   # put the county down first to establish bbox
box()
# ----- cell (4,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (5,7) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (5,8) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (5,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (6,4) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (6,7:8) ------ lil plot --------------
plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)
legend("center",legend=c("State","Sampling Frame","County","BAS Cell","BTPD Town"),bty="n",lwd=c(NA,NA,NA,NA,NA),cex=1.5,pch=c(15,22,22,22,22),pt.bg=c("lightgray",theCols[5],theCols[4],rgb(C[1],C[2],C[3],C[4],max=255),theCols[1]),col=c("lightgray",theCols[5],theCols[4],"lightgray",theCols[1]))
box()
# ----- cell (6,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (7,7) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (7,8) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (7,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (8,4) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (8,7:8) ------ lil plot --------------
plot(westInc)
box()
# ----- cell (8,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- row (10) ---- empty row -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
dev.off()
jpeg(paste0("//lar-file-SRV/Data/BTPD/Product/",state,"/County Plots/SamplingFramePlot - Census - ",state," - ",cnty," County - Pretty.jpg"),width=15.75,height=12,units="in",res=500)
a <- layout(matrix(c(rep(1,9),2,rep(3,7),4,rep(5,9),6,rep(7,5),8,9,10,6,rep(7,5),8,9,10,6,rep(7,5),11,12,13,6,rep(7,5),14,15,16,6,rep(7,5),14,15,16,6,rep(7,5),17,18,19,6,rep(7,5),20,21,22,6,rep(7,5),20,21,22,rep(23,9)),12,9,byrow=TRUE),widths=c(0.01,rep(0.1616667,5),0.01,0.1616667,0.01),heights=c(0.01,0.13571,0.01,0.13571,0.13571,0.01,0.13571,0.13571,0.01,0.13571,0.13571,0.01))   # define layout for output
layout.show(a)
# ----- row (1) ---- empty row ---------------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (2,1) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- row (2) ------ big title on top ------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
text(1,u[1] + 2.00*(u[2]-u[1])/3,paste0('Census BTPD Sampling Frame for '),cex=2.25)
text(1,u[1] + 1.00*(u[2]-u[1])/3,paste0(cnty," County, ",state),cex=2.25)
box()
# ----- cell (2,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- row (3) ------ empty row -------------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- col (1) --- empty column -------------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (4,2) --- big plot --------------
stateAEA <- cnt[cnt@data$State == state & cnt@data$NAME == cnty,]
# aea projected
plot(stateAEA,col='white',border='white')   # put the county down first to establish bbox
plot(cnt[cnt@data$State == state,],col='lightgray',border='lightgray',add=TRUE)
plot(Bas[[j]],add=TRUE,col=theCols[5],border=NA)
D <- c(col2rgb(theCols[4]),0.75*255)
plot(stateAEA,col=rgb(D[1],D[2],D[3],D[4],max=255),border='lightgray',add=TRUE)   # put the county down first to establish bbox
plot(cntLines[[j]],col='lightgray',add=TRUE,lwd=2)   # this is really a county in this setup.
#plot(as(stateAEA,"SpatialLinesDataFrame"),col=theCols[5],add=TRUE)   # this is really a county in this setup.
#plot(cntLines[[j]],add=TRUE,col='lightgray',border='white',lwd=1)
#plot(cntState[[j]],add=TRUE,col='white',lwd=3.5)
C <- c(col2rgb(theCols[3])[,1],0.5*255)
plot(bas[[j]],add=TRUE,col=rgb(C[1],C[2],C[3],C[4],max=255),border="gray")
plot(WYCensus,add=TRUE,col=theCols[2],border=theCols[1])
if(cnty == "Pima"){     # specially add the az towns drawn by az. no other county is named pima.
plot(azTownsp,add=TRUE,col=theCols[2],border=theCols[1])
}
text(coordinates(gCentroid(stateAEA)),paste0(cnty," County"),cex=1.5)#,col="white")
box(which="plot")
# ----- cell (4,4) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
#plot(stateAEA,col='white',border='white')   # put the county down first to establish bbox
plot(cnt[cnt@data$State == state,],col='lightgray',border='lightgray')#,add=TRUE)
plot(Bas[[j]],add=TRUE,col=theCols[5],border=NA)
plot(stateAEA,col=theCols[4],border='lightgray',add=TRUE)   # put the county down first to establish bbox
box()
# ----- cell (4,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (5,7) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (5,8) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (5,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (6,4) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (6,7:8) ------ lil plot --------------
plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)
legend("center",legend=c("State","Sampling Frame","County","BAS Cell","BTPD Town"),bty="n",lwd=c(NA,NA,NA,NA,NA),cex=1.5,pch=c(15,22,22,22,22),pt.bg=c("lightgray",theCols[5],theCols[4],rgb(C[1],C[2],C[3],C[4],max=255),theCols[1]),col=c("lightgray",theCols[5],theCols[4],"lightgray",theCols[1]))
box()
# ----- cell (6,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (7,7) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (7,8) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (7,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (8,4) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (8,7:8) ------ lil plot --------------
plot(westInc)
box()
# ----- cell (8,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- row (10) ---- empty row -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
dev.off()
print(paste0(i," - ",cnty," County - ",state))
for(i in 1:nrow(intCnt)){
state <- intCnt@data$State[i]
cnty <- as.character(droplevels(intCnt@data$NAME[i]))
j <- as.numeric(rownames(samps[samps$State == state,]))
jpeg(paste0("//lar-file-SRV/Data/BTPD/Product/",state,"/County Plots/SamplingFramePlot - Census - ",state," - ",cnty," County - Document.jpg"),width=10.5,height=8,units="in",res=400)
a <- layout(matrix(c(rep(1,9),2,rep(3,7),4,rep(5,9),6,rep(7,5),8,9,10,6,rep(7,5),8,9,10,6,rep(7,5),11,12,13,6,rep(7,5),14,15,16,6,rep(7,5),14,15,16,6,rep(7,5),17,18,19,6,rep(7,5),20,21,22,6,rep(7,5),20,21,22,rep(23,9)),12,9,byrow=TRUE),widths=c(0.01,rep(0.1616667,5),0.01,0.1616667,0.01),heights=c(0.01,0.13571,0.01,0.13571,0.13571,0.01,0.13571,0.13571,0.01,0.13571,0.13571,0.01))   # define layout for output
layout.show(a)
# ----- row (1) ---- empty row ---------------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (2,1) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- row (2) ------ big title on top ------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
text(1,u[1] + 2.00*(u[2]-u[1])/3,paste0('Census BTPD Sampling Frame for '),cex=2.25)
text(1,u[1] + 1.00*(u[2]-u[1])/3,paste0(cnty," County, ",state),cex=2.25)
box()
# ----- cell (2,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- row (3) ------ empty row -------------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- col (1) --- empty column -------------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (4,2) --- big plot --------------
stateAEA <- cnt[cnt@data$State == state & cnt@data$NAME == cnty,]
# aea projected
plot(stateAEA,col='white',border='white')   # put the county down first to establish bbox
plot(cnt[cnt@data$State == state,],col='lightgray',border='lightgray',add=TRUE)
plot(Bas[[j]],add=TRUE,col=theCols[5],border=NA)
D <- c(col2rgb(theCols[4]),0.75*255)
plot(stateAEA,col=rgb(D[1],D[2],D[3],D[4],max=255),border='lightgray',add=TRUE)   # put the county down first to establish bbox
plot(cntLines[[j]],col='lightgray',add=TRUE,lwd=2)   # this is really a county in this setup.
#plot(as(stateAEA,"SpatialLinesDataFrame"),col=theCols[5],add=TRUE)   # this is really a county in this setup.
#plot(cntLines[[j]],add=TRUE,col='lightgray',border='white',lwd=1)
#plot(cntState[[j]],add=TRUE,col='white',lwd=3.5)
C <- c(col2rgb(theCols[3])[,1],0.5*255)
plot(bas[[j]],add=TRUE,col=rgb(C[1],C[2],C[3],C[4],max=255),border="gray")
plot(WYCensus,add=TRUE,col=theCols[2],border=theCols[1])
if(cnty == "Pima"){     # specially add the az towns drawn by az. no other county is named pima.
plot(azTownsp,add=TRUE,col=theCols[2],border=theCols[1])
}
text(coordinates(gCentroid(stateAEA)),paste0(cnty," County"),cex=1.5)#,col="white")
box(which="plot")
# ----- cell (4,4) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
#plot(stateAEA,col='white',border='white')   # put the county down first to establish bbox
plot(cnt[cnt@data$State == state,],col='lightgray',border='lightgray')#,add=TRUE)
plot(Bas[[j]],add=TRUE,col=theCols[5],border=NA)
plot(stateAEA,col=theCols[4],border='lightgray',add=TRUE)   # put the county down first to establish bbox
box()
# ----- cell (4,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (5,7) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (5,8) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (5,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (6,4) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (6,7:8) ------ lil plot --------------
plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)
legend("center",legend=c("State","Sampling Frame","County","BAS Cell","BTPD Town"),bty="n",lwd=c(NA,NA,NA,NA,NA),cex=1.5,pch=c(15,22,22,22,22),pt.bg=c("lightgray",theCols[5],theCols[4],rgb(C[1],C[2],C[3],C[4],max=255),theCols[1]),col=c("lightgray",theCols[5],theCols[4],"lightgray",theCols[1]))
box()
# ----- cell (6,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (7,7) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (7,8) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (7,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (8,4) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (8,7:8) ------ lil plot --------------
plot(westInc)
box()
# ----- cell (8,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- row (10) ---- empty row -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
dev.off()
jpeg(paste0("//lar-file-SRV/Data/BTPD/Product/",state,"/County Plots/SamplingFramePlot - Census - ",state," - ",cnty," County - Pretty.jpg"),width=15.75,height=12,units="in",res=500)
a <- layout(matrix(c(rep(1,9),2,rep(3,7),4,rep(5,9),6,rep(7,5),8,9,10,6,rep(7,5),8,9,10,6,rep(7,5),11,12,13,6,rep(7,5),14,15,16,6,rep(7,5),14,15,16,6,rep(7,5),17,18,19,6,rep(7,5),20,21,22,6,rep(7,5),20,21,22,rep(23,9)),12,9,byrow=TRUE),widths=c(0.01,rep(0.1616667,5),0.01,0.1616667,0.01),heights=c(0.01,0.13571,0.01,0.13571,0.13571,0.01,0.13571,0.13571,0.01,0.13571,0.13571,0.01))   # define layout for output
layout.show(a)
# ----- row (1) ---- empty row ---------------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (2,1) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- row (2) ------ big title on top ------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
text(1,u[1] + 2.00*(u[2]-u[1])/3,paste0('Census BTPD Sampling Frame for '),cex=2.25)
text(1,u[1] + 1.00*(u[2]-u[1])/3,paste0(cnty," County, ",state),cex=2.25)
box()
# ----- cell (2,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- row (3) ------ empty row -------------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- col (1) --- empty column -------------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (4,2) --- big plot --------------
stateAEA <- cnt[cnt@data$State == state & cnt@data$NAME == cnty,]
# aea projected
plot(stateAEA,col='white',border='white')   # put the county down first to establish bbox
plot(cnt[cnt@data$State == state,],col='lightgray',border='lightgray',add=TRUE)
plot(Bas[[j]],add=TRUE,col=theCols[5],border=NA)
D <- c(col2rgb(theCols[4]),0.75*255)
plot(stateAEA,col=rgb(D[1],D[2],D[3],D[4],max=255),border='lightgray',add=TRUE)   # put the county down first to establish bbox
plot(cntLines[[j]],col='lightgray',add=TRUE,lwd=2)   # this is really a county in this setup.
#plot(as(stateAEA,"SpatialLinesDataFrame"),col=theCols[5],add=TRUE)   # this is really a county in this setup.
#plot(cntLines[[j]],add=TRUE,col='lightgray',border='white',lwd=1)
#plot(cntState[[j]],add=TRUE,col='white',lwd=3.5)
C <- c(col2rgb(theCols[3])[,1],0.5*255)
plot(bas[[j]],add=TRUE,col=rgb(C[1],C[2],C[3],C[4],max=255),border="gray")
plot(WYCensus,add=TRUE,col=theCols[2],border=theCols[1])
if(cnty == "Pima"){     # specially add the az towns drawn by az. no other county is named pima.
plot(azTownsp,add=TRUE,col=theCols[2],border=theCols[1])
}
text(coordinates(gCentroid(stateAEA)),paste0(cnty," County"),cex=1.5)#,col="white")
box(which="plot")
# ----- cell (4,4) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
#plot(stateAEA,col='white',border='white')   # put the county down first to establish bbox
plot(cnt[cnt@data$State == state,],col='lightgray',border='lightgray')#,add=TRUE)
plot(Bas[[j]],add=TRUE,col=theCols[5],border=NA)
plot(stateAEA,col=theCols[4],border='lightgray',add=TRUE)   # put the county down first to establish bbox
box()
# ----- cell (4,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (5,7) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (5,8) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (5,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (6,4) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (6,7:8) ------ lil plot --------------
plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)
legend("center",legend=c("State","Sampling Frame","County","BAS Cell","BTPD Town"),bty="n",lwd=c(NA,NA,NA,NA,NA),cex=1.5,pch=c(15,22,22,22,22),pt.bg=c("lightgray",theCols[5],theCols[4],rgb(C[1],C[2],C[3],C[4],max=255),theCols[1]),col=c("lightgray",theCols[5],theCols[4],"lightgray",theCols[1]))
box()
# ----- cell (6,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (7,7) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (7,8) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (7,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (8,4) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- cell (8,7:8) ------ lil plot --------------
plot(westInc)
box()
# ----- cell (8,9) ---- empty cell -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
# ----- row (10) ---- empty row -----------
par(mar = c(0,0,0,0)); plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE); u <- par("usr")
dev.off()
print(paste0(i," - ",cnty," County - ",state))
}
blmLand <- readOGR('//lar-file-srv/Data/BTPD/GIS_Digitizing','BLM_StateClip_20150820')
blmBas <- readOGR('//lar-file-srv/Data/BTPD/GIS_Digitizing','BTPD_BLM_Grid')
blmbas <- readOGR('//lar-file-srv/Data/BTPD/Product/BLM','BLM--BAS')
blmall <- readOGR('//lar-file-srv/Data/BTPD/Product/BLM','BLM--AllTowns')
blmint <- readOGR('//lar-file-srv/Data/BTPD/Product/BLM','BLM--IntTowns')
blmcen <- readOGR('//lar-file-srv/Data/BTPD/Product/BLM','BLM--CentTowns')
plot(blmLand,xlim=c(-738000,-733000),ylim=c(2674500,2677000),col="lightyellow",border="lightgray")
C <- c(col2rgb(theCols[4])[,1],0.5*255)
plot(blmbas,add=TRUE,col=rgb(C[1],C[2],C[3],C[4],max=255),border="gray")
D <- c(col2rgb(theCols[2])[,1],255)
plot(blmall,add=TRUE,col=rgb(D[1],D[2],D[3],D[4],max=255),border="gray")
E <- c(col2rgb(theCols[1])[,1],255)
plot(blmint,add=TRUE,col=rgb(E[1],E[2],E[3],E[4],max=255),border="gray")
F <- c(col2rgb(theCols[5])[,1],255)
plot(blmcen,add=TRUE,col=rgb(F[1],F[2],F[3],F[4],max=255),border="gray")
text(coordinates(gCentroid(blmbas[blmbas@data$Grid_ID == 'MT035490',])),paste0("MT035490"),cex=1.5)#,col="white")
legend("bottomright",legend=c("BLM Land","BAS Cell","BTPD Centroided Town","BTPD Non-Centroided Town","BTPD Clipped Town"),bty="n",lwd=c(NA,NA,NA,NA,NA),cex=1.5,pch=c(22,22,22,22,22),pt.bg=c("lightyellow",rgb(C[1],C[2],C[3],C[4],max=255),rgb(D[1],D[2],D[3],D[4],max=255),rgb(D[1],D[2],D[3],D[4],max=255),rgb(F[1],F[2],F[3],F[4],max=255)),col=c("lightgray","gray","gray","gray","gray"))
box()
blmLand <- readOGR('//lar-file-srv/Data/BTPD/GIS_Digitizing','BLM_StateClip_20150820')
blmBas <- readOGR('//lar-file-srv/Data/BTPD/GIS_Digitizing','BTPD_BLM_Grid')
blmbas <- readOGR('//lar-file-srv/Data/BTPD/Product/BLM','BLM--BAS')
blmall <- readOGR('//lar-file-srv/Data/BTPD/Product/BLM','BLM--AllTowns')
blmint <- readOGR('//lar-file-srv/Data/BTPD/Product/BLM','BLM--IntTowns')
blmcen <- readOGR('//lar-file-srv/Data/BTPD/Product/BLM','BLM--CentTowns')
plot(blmLand,xlim=c(-738000,-733000),ylim=c(2674500,2677000),col="lightyellow",border="lightgray")
C <- c(col2rgb(theCols[4])[,1],0.5*255)
plot(blmbas,add=TRUE,col=rgb(C[1],C[2],C[3],C[4],max=255),border="gray")
D <- c(col2rgb(theCols[2])[,1],255)
plot(blmall,add=TRUE,col=rgb(D[1],D[2],D[3],D[4],max=255),border="gray")
E <- c(col2rgb(theCols[1])[,1],255)
plot(blmint,add=TRUE,col=rgb(E[1],E[2],E[3],E[4],max=255),border="gray")
F <- c(col2rgb(theCols[5])[,1],255)
plot(blmcen,add=TRUE,col=rgb(F[1],F[2],F[3],F[4],max=255),border="gray")
text(coordinates(gCentroid(blmbas[blmbas@data$Grid_ID == 'MT035490',])),paste0("MT035490"),cex=1.5)#,col="white")
legend("bottomright",legend=c("BLM Land","BAS Cell","BTPD Centroided Town","BTPD Non-Centroided Town","BTPD Clipped Town"),bty="n",lwd=c(NA,NA,NA,NA,NA),cex=1.5,pch=c(22,22,22,22,22),pt.bg=c("lightyellow",rgb(C[1],C[2],C[3],C[4],max=255),rgb(D[1],D[2],D[3],D[4],max=255),rgb(D[1],D[2],D[3],D[4],max=255),rgb(F[1],F[2],F[3],F[4],max=255)),col=c("lightgray","gray","gray","gray","gray"))
box()
load('//lar-file-srv/Data/BTPD/Product/BLM/the BLM - 2015-11-21 - blm2015.11.21.RData')
stateConverge[[2]]
stateConverge2[[2]]
load('//lar-file-srv/Data/BTPD/Product/BLM/the BLM - 2015-11-25 - blm2015.11.25.RData')
stateConverge[[2]]    # clipping -- ASsoci
stateConverge2[[2]]   # Centroid -- lilBits
load('//lar-file-srv/Data/BTPD/Product/BLM/the BLM - 2015-11-25 - blm2015.11.25.RData')
stateConverge[[2]]    # clipping -- ASsoci
stateConverge2[[2]]   # Centroid -- lilBits
6.63*11
library(RODBC)
testing <- TRUE           # points to different output folders.
platform <- 'CAMP_RST20151130'    # points to different platforms
if(testing == FALSE){
paste(cat('testing == FALSE\n'))
source("\\\\LAR-FILE-SRV/Data/PSMFC_CampRST/ThePlatform/CAMP_RST20151123/R-Interface/source_all.R")
} else {
paste(cat('testing == TRUE\n'))
setwd(paste0("\\\\LAR-FILE-SRV/Data/PSMFC_CampRST/ThePlatform/",platform,"/R-Interface/"))
source(paste0("\\\\LAR-FILE-SRV/Data/PSMFC_CampRST/ThePlatform/",platform,"/R-Interface/source_all_testing.R"))
by <- 'week'
river <- 'Old American Test'
}
sessionInfo()
