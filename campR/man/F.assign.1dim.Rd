% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assign_1dim.r
\name{F.assign.1dim}
\alias{F.assign.1dim}
\title{F.assign.1dim}
\usage{
F.assign.1dim(catch, present.var, absent.var)
}
\arguments{
\item{catch}{<describe argument>}

\item{present.var}{<describe argument>}

\item{absent.var}{<describe argument>}
}
\value{
<describe return value>
}
\description{
Values in one dimension of the basic run X lifstage table is present, the other is missing.

   Assign the missing one based on frequency dist of the other.


   We make sure to TOSS RANDOMSELECTION == "NO"
}
\details{
<other comments found in file>
            print(c(j, nrow(catch)))
            print(catch[j,])
   Get the frequency distribution for the absent variable on this day.  Use that to inflate plus counts.
   Note: must compute these indicators in the loop because catch is changing length
   If we are here, there are no fish to compute frequencies.  
   Check to see if there are any non-RandomlySelected fish to use. 
   The way they coded Randomly selected, we first check to see if there are any randomly selected fish 
   which would come from the "grab sample".  If not, they may have measured all fish, and not taken a grab sample. 
   In this case, they set RandomSelection to "no".  This means we must check for non-random selection fish after 
   determining there are no randomly selected ones. 
   Still no fish                
   Expand out to and see if there are randomly selected fish with absentvar defined from other trap visits on same day
   Still no fish
   See if any non-randomly selected fish on same day
   Still no fish
   Expand window out +- 24 hours around date of target trapVisit
   Still no fish, try one more time.
   Look for non-randomly sampled fish +- 24 hours. 
   If still no fish, give up.
   If there are no fish in thisInd at this point, we give up and will ask the user to fix this manually. 
   There were other fish captured this day that had a "absent" designation. Use them.
                cat(paste("Proportions of", absent.var, " (when recorded) on", catch$visitTime[j],  ":\n"))
                print(props)
   Multiply proportions that day by number of missings - the 'plus' count
   Make sure the plus counts sum to the original. They won't always due to rounding.  This fixes the rounding error.
                cat("-----------------------------\n")
                print( N.j )
                print( n.j )
                print( N.more )
                print( props )
   Replace line j with length(props) lines.  These new lines have $n equal to n.j, but all other variables equal to the original line
   In prep for next loop.  
   We must recompute UnassignedAbsent and thisPresentAndMissing because we just change the number of rows in catch.
   Thus, these vectors grow in length over loops
   There were no other fish caught that day with some value for the "absent" variable.
   Leave 'absent' blank.  NOTE: this means some missings in 'absent' may remain in the data set after this routine.
   It might be possible to look at previous and subsequent trap visits to assign a value to 'absent', but that would need to be
   done by hand. Write out a note to this effect. 
   I only need to update thisPresentAndMissing[j] to FALSE because nothing has happened, but just for good measure, I'll re-compute
            print(catch[j:(j+length(props)-1),])
            cat("hit return...")
            readline()
   Finally, it is possible that we added some rows with n=0.  Remove them.
}
\examples{
<insert examples>

}
\author{
WEST Inc.
}
\seealso{
\code{\link{<related routine>}}, \code{\link{<related routine>}}
}

