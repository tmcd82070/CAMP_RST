% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.spline.R, R/plot_spline.R
\name{plot_spline}
\alias{plot_spline}
\title{plot_spline}
\usage{
plot_spline(trap, catch.df, df.and.fit, file = NA, df3)

plot_spline(trap, catch.df, df.and.fit, file = NA, df3)
}
\arguments{
\item{trap}{<describe argument>}

\item{catch.df}{<describe argument>}

\item{df.and.fit}{<describe argument>}

\item{file}{=NA <describe argument>}

\item{df3}{<describe argument>}

\item{file=NA}{<describe argument>}

\item{trap}{<describe argument>}

\item{catch.df}{<describe argument>}

\item{df.and.fit}{<describe argument>}
}
\value{
<describe return value>

<describe return value>
}
\description{


Plot smoothing splines
}
\details{
<other comments found in file>
 catch.df <- catch.df
 df.and.fit <- df.and.fit
 get a per-day record of halfcone status.  traps can have more than one
 record per day, so if at least one record on a day is half-cone, just
 say the whole day is half-cone, for plotting ease.  
 cannot use the df <- df.and.fit$df2 here -- the catch algorithm screws with the
 usually easily identifiable non-fishing periods.  so, use original catch.df to get
 halfcone status data.
 get the goods we need to make a spline plot.
 estimate fish counts via the spline model -- use rownames throughout for merging.
 merge model info with outcome and date
 summarize all observed catch to batchDate and bring in to model-spline df
 summarize all imputations of catch to batchDate 
 summarize all sums of observed and imputed catch to batchDate and bring in to model-spline df
 rename imputed catch and bring in to model-spline df
 bring in to model-spline df halfcone operation days
 for plotting ease, make dfs specific to different catch quantities
 --- now, make the plot. ---
   If file=NA, a pdf graphing device is assumed to be open already.
   Shut down all graphics devices
   ---- Open PNG device
 set graphical bounds
 natural scale plot -- make an empty plot/palette
 draw the vertical segments
 draw the exponentiated spline curve
 draw the dots of observed and imputed catch
 put in x-axis tick and labels
 put in a header
 make the legends
               Full Cone (1st legend)                                  Half Cone (2nd legend)                                        Other Stuff (3rd legend)
 ---- end plotting ----
 ---- compile graphing statistics and data ----------------------    
write.csv(jBaseTable,'C:/Users/jmitchell/Desktop/jBaseTable.csv')
        
   sum(na.omit(jBaseTable$preCatch))                 # assignedCatch + unassignedCatch
   sum(na.omit(as.vector(jBaseTable$imputedCatch)))  # imputedCatch
   sum(na.omit(jBaseTable$totalCatch))               # totalCatch
   sum(na.omit(allJBaseTable$preCatch))                 # assignedCatch + unassignedCatch
   sum(na.omit(as.vector(allJBaseTable$imputedCatch)))  # imputedCatch
   sum(na.omit(allJBaseTable$totalCatch))               # totalCatch 
 tapply(allJBaseTable[!is.na(allJBaseTable$preCatch),]$preCatch,allJBaseTable[!is.na(allJBaseTable$preCatch),]$siteID,FUN=sum)
   # log scale
   model2 <- model[model$n.tot != 0,]
   plot(model2$EndTime,model2$logTheP,type='l',col='red',ylim=c(min(model2$logTheP,model2$logN.tot),max(model2$logTheP,model2$logN.tot)))
   par(new=TRUE)
   plot(model2$EndTime,model2$logN.tot,type='p',pch=19,cex=0.7,col='black',ylim=c(min(model2$logTheP,model2$logN.tot),max(model2$logTheP,model2$logN.tot)))

Need details
}
\examples{
<insert examples>

<insert examples>

}
\author{
WEST Inc.

WEST Inc.
}
\seealso{
\code{\link{<related routine>}}, \code{\link{<related routine>}}

\code{\link{<related routine>}}, \code{\link{<related routine>}}
}

