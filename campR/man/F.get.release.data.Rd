% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_release_data.r
\name{F.get.release.data}
\alias{F.get.release.data}
\title{F.get.release.data - Retrieve data frame containing release trials.}
\usage{
F.get.release.data(site, taxon, min.date, max.date)
}
\arguments{
\item{site}{The identification number of the site for which estimates are
required.}

\item{taxon}{The species identifier indicating the type of fish of interest. 
This is always \code{161980}; i.e., Chinook Salmon.}

\item{min.date}{The start date for data to include. This is a text string in
the format \code{\%Y-\%m-\%d}, or \code{YYYY-MM-DD}.}

\item{max.date}{The end date for data to include.  Same format as
\code{min.date}.}
}
\value{
A data frame summarizing efficiency trials for the site of interest
  for all traps between the dates indicated.  Data include \code{Recaps}
  numerators and \code{nReleased} denominators.
}
\description{
Fetch data on catchability trials from the Access database. 
Do some initial computations,
like dates.
}
\details{
In the original query results, there is one record for every trap 
  visit within a \code{releaseTime}, say 7 days, even if the trap visit did 
  not catch any marked fish.  In other words, zeros are recorded because all 
  combinations of \code{releaseID}, \code{trapPositionID}, and 
  \code{trapVisitID} upon which marked fish could have been caused are here. 
  Jason: Is this still true?
  
  Given a specific release, the resulting data frame tells how many fish from
  the release were captured on subsequent trap visits, for each trap.  These 
  result from collapsing all trap visits and computing the total number of 
  each release's captured fish.
  
  Generally, at any one time, more than one release can "go," and so a single
  trap visit may catch fish from multiple releases.
  
  Release records need to have both variables \code{IncludeTest} and 
  \code{IncludeCatch} flagged as \code{Yes} for inclusion in efficiency 
  estimation. Recaptures that took place during half-cone operations are 
  multiplied by the value of the halfConeMulti global variable, which is set 
  at 2. Half cone operations are identified by variable \code{HalfCone} 
  having a value of \code{Yes}.
  
  Total recaptures are summarized over unique combinations of trap visits and
  positions, via variables \code{releaseID} and \code{trapPositionID}.
  
  Variables \code{HrsToFirstVisitAfter} and \code{HrsToLastVisitAfter} are
  used in function \code{F.est.efficiency} as helper variables to derive a
  batch date when the \code{meanEndTime} variable is \code{NA}.
}
\section{Mean Recapture Time}{
 
The mean recapture time is estimated for each
  unique grouping of \code{releaseID} and \code{trapPositionID}.  In the case
  of no recaptures, the mean recapture time is recorded as \code{NA}.  In all
  other cases, the mean recapture time is calculated as the weighted mean of 
  recapture times, weighting on the number of caught fish.  For example,
  suppose fishing takes place at a particular trap over 7 consecutive days. 
  If the bulk of fish were caught on day 7, then the mean recapture time 
  would be near that 7th day of fishing.  This is in contrast to a "straight"
  mean recapture time, which would estimate a mean recapture time
  3.5 days after the start of fishing.
}

\section{What?}{
 
There are some variables calculated in here that I think are
  obsolete, i.e., HrsToFirstVisitAfter, HrsToLastVisitAfter,
  meanTimeAtLargeHrs.  I have commented out these lines/sections, with the
  expectation that they can be deleted.
}
\examples{
\dontrun{

# Need to be able to query, no?  What to do about that?

}
}

