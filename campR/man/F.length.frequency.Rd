% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/length_freq.r
\name{F.length.frequency}
\alias{F.length.frequency}
\title{F.length.frequency}
\usage{
F.length.frequency(site, taxon, run, min.date, max.date, output.file,
  by.lifestage)
}
\arguments{
\item{site}{<describe argument>}

\item{taxon}{<describe argument>}

\item{run}{<describe argument>}

\item{min.date}{<describe argument>}

\item{max.date}{<describe argument>}

\item{output.file}{<describe argument>}

\item{by.lifestage}{<describe argument>}
}
\value{
<describe return value>
}
\description{
Plot frequency distribution of lengths.

   Input:
   db = full path and name of the Access data base to retrieve data from
   site = site ID of the place we want, trap locaton 
   taxon = taxon number (from luTaxon) to retrieve
   run = run ID of fish we want to do estimates for. 
   by.lifestage = if TRUE, produce histograms by lifestage, otherwise, lump all fish. 

   Output:
   A graph, in "file". 



  Open a graphics device
}
\details{
<other comments found in file>
   Open ODBC channel and retrieve lifestage labels
   ********
   Retrieve basic data set, one line per fish or group of fish of same length.
 jason 3/25/2016 -- drop oldTrapPositionID here.  code assumes that var not here
 if catch.df has no data, it doesn't get batchDates added.  
catch.df <-  data.frame(catch.df,batchDate=integer(0))
  grab non-valid Catch
   Fetch run name
 no attributes to bring in -- do it now
   ********
   Now plot
   Define plotting variables
     lstage <- catch.df$lifeStageID
   Drop obs if any critical data is missing
   If we are talking salmon here, limit the lifestages to fry, parr, and smolt
     drop <- drop | (lstage > 8)
   --------------------- Convert from lifestages the traps used to life stages that CAMP uses.  The conversion is in table rst.life.stages
 JASON OBSOLETE -- QUERY THAT GETS CATCH WORKS ON DESCRIPTORS INSTEAD OF IDS -- 1/26/2015
 if( by.lifestage ){
     u.l.s <- sort(unique(lstage))
     for( l.s in u.l.s ){
         camp.l.s <- rst.life.stage$lifeStageCAMPID[ rst.life.stage$lifeStageID == l.s ]
         lstage[ lstage == l.s ] <- camp.l.s
     }
 }
   -------------------- Rep the values for number of fish of that particular length
   -------------------- An internal function to compute common break points 
 x <- y
 near <- 10
 width <- 2
   -------------------- An internal function to compute common y axes
   -------------------- An internal function to draw one length frequency plot
 x <- yy
 bks <- bks
 col <- mycol[ i ]
 last <- TRUE
 max.y <- max.y
 stage <- stage.name
   Plot the bars
   Uncomment the following line to plot everything on same y axis
h <- hist(x, breaks=bks, freq=T, xlab=xl, ylab="", main="", ylim=c(0,max.y),
    density=-1, col=col, xaxt=xa, cex.lab=2, cex.axis=1.25 )
     h <- hist(x, breaks=bks, freq=T, xlab=xl, ylab="", main="", ylim=range(y.at),
               density=-1, col=col, xaxt=xa, cex.lab=2, cex.axis=1.25, yaxt="n" )
 ----- jason update 12/16/2015 -------------------------------------------------------------------------------------------
 ----- jason update 12/16/2015 -------------------------------------------------------------------------------------------
   Smoothed density - If you want it
require(MASS)
pretty.bks <- pretty(bks)
axis(side=1, at=pretty.bks )
sm <- density( x, adjust=1.5, bw="SJ-dpi" )
sm$y <- sm$y * (h$breaks[2] - h$breaks[1]) * sm$n
lines( sm, col="black", lwd=2 )
   Legend
   ---------------------- Set main titles
   ---------------------- Plot by lifestage or not
   Plot by lifestage
layout.show(nl+2)
   Get common breaks
   Get max count overall lifestages in any one bin
   Plot histograms 
 This is the bottom panel, make room for x-axis ticks and label
   Plot outer y axis label
   Plot outer title 
   ---- Plot only one histogram, much easier
   Main title
   Y label
   Fix up the output
   ---- Close the graphics file
   ---- Write the CSV file 
   ---- Send messages back to the interface
}
\examples{
<insert examples>

}
\author{
WEST Inc.
}
\seealso{
\code{\link{<related routine>}}, \code{\link{<related routine>}}
}

